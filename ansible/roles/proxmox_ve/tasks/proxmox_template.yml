- name: Create Proxmox template
  hosts: proxmox
  vars_files:
    - ./proxmox_template_vars.yml
    - ./proxmox_vault.yml
  tasks:
    - name: Check template
      ansible.builtin.shell: pveam list local | grep -i {{ template_name }}
      register: existing_template
      failed_when: existing_template.stdout
      changed_when: false
      ignore_errors: true

    - name: Abort if template already exists
      fail:
        msg: "Template with name {{ template_name }} already exists in storage"
      when: existing_template.failed_when_result

    - name: Deploy CT from base template
      community.general.proxmox:
        node: pve
        api_user: ansible-user@pam
        api_host: pve
        api_token_id: ansible-token
        api_token_secret: "{{ ansible_user_api_token_secret }}"
        hostname: ansible-create-lxc-template
        ostemplate: "local:vztmpl/debian-11-standard_11.7-1_amd64.tar.zst"
        storage: local-lvm
        password: password
        netif: '{"net0":"name=eth0,ip=dhcp,ip6=dhcp,bridge=vmbr0"}'
        state: present
      register: ret_val
    
    - name: Debug Deploy CT from base template
      ansible.builtin.debug:
        msg: "{{ ret_val }}"

    - name: Let proxmox finish setting up CT template container
      ansible.builtin.pause:
        seconds: 5

    - name: Start up CT template container
      community.general.proxmox:
        node: pve
        api_user: ansible-user@pam
        api_host: pve
        api_token_id: ansible-token
        api_token_secret: "{{ ansible_user_api_token_secret }}"
        hostname: "ansible-create-lxc-template"
        state: started
      register: ct_start

    - name: Provision template container
      ansible.builtin.command: "pct exec {{ ct_start.msg | regex_search('[0-9]+') }} -- {{ item }}"
      with_items:
        - "apt -y update"
        - "apt -y install isc-dhcp-server"
        - "apt -y install curl"
    
    - name: Stop template container
      community.general.proxmox:
        node: pve
        api_user: ansible-user@pam
        api_host: pve
        api_token_id: ansible-token
        api_token_secret: "{{ ansible_user_api_token_secret }}"
        hostname: "ansible-create-lxc-template"
        state: stopped

    - name: Create temp dir to store template
      ansible.builtin.file:
        path: /tmp/ansible-create-lxc-template
        state: directory

    - name: Dump the modified template to temporary folder
      ansible.builtin.command: "vzdump {{ ct_start.msg | regex_search('[0-9]+') }} --mode stop --compress gzip --dumpdir /tmp/ansible-create-lxc-template"
      changed_when: true

    - name: Find template file
      ansible.builtin.find:
        paths: /tmp/ansible-create-lxc-template
        patterns: "*.tar.gz"
      register: template_file

    - name: Rename template file
      ansible.builtin.copy:
        remote_src: true
        src: "{{ template_file.files[0].path }}"
        dest: "{{ template_file.files[0].path | dirname }}/{{ new_template_name }}"
      when: template_file.matched == 1

    - name: Copy template to storage
      ansible.builtin.copy:
        src: "{{ template_file.files[0].path | dirname }}/{{ new_template_name }}"
        dest: "/var/lib/vz/template/cache"
        remote_src: true
      when: template_file.matched == 1

    - name: Clean up temporary folder
      ansible.builtin.file:
        path: /tmp/ansible-create-lxc-template
        state: absent
    
    - name: Remove template container
      community.general.proxmox:
        node: pve
        api_user: ansible-user@pam
        api_host: pve
        api_token_id: ansible-token
        api_token_secret: "{{ ansible_user_api_token_secret }}"
        hostname: "ansible-create-lxc-template"
        state: absent